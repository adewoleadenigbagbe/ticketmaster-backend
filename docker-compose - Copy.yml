version: "3.8"
services:
  api:
    container_name: api
    build:
      dockerfile: apis/Dockerfile
      context: .
    volumes:
      - ./service_a:/myapp
    ports:
      - "8185:8185"
    depends_on:
      - mysql
      - nats
    restart: on-failure
    networks:
      - networkstack

  activationreservationservice:
    container_name: activationreservationservice
    build:
      dockerfile: activationreservation/Dockerfile
      context: .
    volumes:
      - ./service_b:/myapp
    # ports:
    #   - "8081:3000"
    depends_on:
      - mysql
      - nats
    restart: always
    networks:
      - networkstack

  waitingservice:
    container_name: waitingservice
    build:
      dockerfile: waitingservice/Dockerfile
      context: .
    volumes:
      - ./service_c:/myapp
    # ports:
    #   - "8082:3000"
    depends_on:
      - mysql
      - nats
    restart: always
    networks:
      - networkstack

  mysql:
    image: mysql
    container_name: mysql
    environment:
      # MYSQL_ROOT_PASSWORD: service_c
      MYSQL_DATABASE: "ticketmasterbetadb"
      MYSQL_USER: "root"
      MYSQL_PASSWORD: "P@ssw0r1d"
    volumes:
      - ./service_c/tmp/mysqldb:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    networks:
      - networkstack
  
  nats:
    image: nats:alpine
    container_name: nats
    restart: always
    ports:
      - "8222:8222"
    command: -c /etc/nats/nats.conf
    volumes:
      - ./nats.conf:/etc/nats/nats.conf
      - $JETSTREAM_STORAGE:/data
    networks:
      - networkstack


# Networks to be created to facilitate communication between containers
networks:
  networkstack:
    driver: bridge

volumes:
  sqlite_data:
