// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "root"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/api/v1/cinemas/{id}/cinemaHall": {
            "get": {
                "description": "Create a halls to existing cinema",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cinemas"
                ],
                "summary": "Create a halls to existing cinema",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "CinemaHallRequest",
                        "name": "CinemaHallRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/services.CinemaHallRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.CinemaHallResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/city/{id}": {
            "get": {
                "description": "Get a particular city by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cities"
                ],
                "summary": "Get city by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.CityModelResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/movies/{id}": {
            "get": {
                "description": "Get a particular movie by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "movies"
                ],
                "summary": "Get movie by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/services.MovieDataResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "enums.SeatType": {
            "type": "integer",
            "enum": [
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "Premium",
                "Standard",
                "Gold"
            ]
        },
        "services.CinemaHallModel": {
            "type": "object",
            "properties": {
                "cinemaSeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.CinemaSeatModel"
                    }
                },
                "name": {
                    "type": "string"
                },
                "totalSeat": {
                    "type": "integer"
                }
            }
        },
        "services.CinemaHallRequest": {
            "type": "object",
            "properties": {
                "cinemaId": {
                    "type": "string"
                },
                "halls": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.CinemaHallModel"
                    }
                }
            }
        },
        "services.CinemaHallResponse": {
            "type": "object",
            "properties": {
                "CinemaId": {
                    "type": "string"
                }
            }
        },
        "services.CinemaSeatModel": {
            "type": "object",
            "properties": {
                "seatNumber": {
                    "type": "integer"
                },
                "type": {
                    "$ref": "#/definitions/enums.SeatType"
                }
            }
        },
        "services.CityModelResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "isDeprecated": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                }
            }
        },
        "services.MovieDataResponse": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "genre": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "language": {
                    "type": "string"
                },
                "popularity": {
                    "type": "number"
                },
                "releaseDate": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "voteCount": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8185",
	BasePath:         "/",
	Schemes:          []string{"http"},
	Title:            "TicketMaster Endpoints",
	Description:      "Contains all the endpoint for the ticketmaster app",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
